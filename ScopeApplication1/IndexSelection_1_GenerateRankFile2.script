REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.Core.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.Utility.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.ScheduleSelection.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.IndexSelection.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.SnapshotMerger.dll";
RESOURCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\HashValue.dll";
REFERENCE @"/shares/SegmentRelevance/SegmentRelevance/MMShared/bin/Relevance.ScopeLib.dll";

RESOURCE "/local/Prod/Image/Prism/Blocklist/BlocklistDomains_2022_03_03.txt";
RESOURCE "/local/Prod/Image/Prism/Data/DomainsToBlockList_2021_11_20.txt";
NoduleList =
    SELECT *
    FROM
    (
        SSTREAM "/local/Prod/Image/Prism/2022-06-14/PrismProdRank_1.ss"
    );

NoduleList =
    SELECT *
    FROM NoduleList
    WHERE NOT IsBlockedDomain(PDomain, MDomain);

Authority_Page_Manual =
    EXTRACT Host,
            Score,
            Date,
            Comments
    FROM "/shares/SegmentRelevance/SegmentRelevance/fromCosmos09/prod_QC_HostQC/hotfix.tsv"
    USING DefaultTextExtractor(silent: true)
    HAVING Host != "Host";

Bad_Authority_Page_Manual =
    SELECT Host AS PDomain,
           double.Parse(Score) AS Score,
           Comments
    FROM Authority_Page_Manual;

Bad_Authority_Page_Manual =
    SELECT *
    WHERE Score < 1005000;

Bad_Authority_Page_Manual_PDomain =
    SELECT DISTINCT PDomain
    FROM Bad_Authority_Page_Manual;

NoduleList_PDomain =
    SELECT DISTINCT PDomain
    FROM NoduleList;

Good_Authority_Page_Manual_PDomain =
    SELECT a.*
    FROM NoduleList_PDomain AS a
         LEFT ANTISEMIJOIN
             Bad_Authority_Page_Manual_PDomain AS b
         ON a.PDomain == b.PDomain;

NoduleList =
    SELECT a.*
    FROM NoduleList AS a
         INNER JOIN
             Good_Authority_Page_Manual_PDomain AS b
         ON a.PDomain == b.PDomain;

Bad_Authority_Page_Auto =
    SELECT Host AS PDomain,
           Score
    FROM
    (
        SSTREAM "/shares/SegmentRelevance/SegmentRelevance/fromCosmos09/prod_QC_HostQC/Pipeline/V2/QCHostScoreV2.ss"
    )
    WHERE Score != null AND Score < 51200;

Bad_Authority_Page_Auto_PDomain =
    SELECT DISTINCT PDomain
    FROM Bad_Authority_Page_Auto;

NoduleList_PDomain =
    SELECT DISTINCT PDomain
    FROM NoduleList;

Good_Authority_Page_Auto_PDomain =
    SELECT a.PDomain
    FROM NoduleList_PDomain AS a
         LEFT ANTISEMIJOIN
             Bad_Authority_Page_Auto_PDomain AS b
         ON a.PDomain == b.PDomain;

NoduleList =
    SELECT b.*
    FROM Good_Authority_Page_Auto_PDomain AS a
         INNER JOIN NoduleList
              AS b
         ON a.PDomain == b.PDomain;


RacyANN =
    EXTRACT QueryMUrl,
            QueryPUrl,
            Label,
            QueryDocKey,
            ResultDocKey,
            ResultPosition,
            ResultScore,
            PUrl,
            MUrl,
            ResultTUrl
    FROM "/shares/SegmentRelevance/SegmentRelevance/Prod/Image/SparkSchedulingSupport/Prism/HitApp/RacyFeature/racy_feature_more_750MIndex_ANNResult_Top1000.tsv"
    USING DefaultTextExtractor();

RacyANNMurl =
    SELECT DISTINCT MUrl;

RacyANNKey =
    SELECT MMRV2.Utility.HashValue.GetHttpUrlHashBase64String(MUrl) AS Key;

NoduleList =
    SELECT a.*
    FROM NoduleList AS a
         LEFT ANTISEMIJOIN
             RacyANNKey AS b
         ON a.Key == b.Key;

OUTPUT
TO SSTREAM "/local/users/v-yangtian/Image/Prism/2022-06-05/PrismProdRank_1_Stat2.ss";


#CS

static HashSet<string> blockedDomains = new HashSet<string>(File.ReadAllLines(Path.GetFileName("/local/Prod/Image/Prism/Data/DomainsToBlockList_2021_11_20.txt")));

public static bool IsBlockedDomain(string pageDomain,string imageDomain)
{
    if(blockedDomains.Contains(pageDomain) || blockedDomains.Contains(imageDomain) )
        return true;

    return false;
}

#ENDCS

// Generated by ScopeStudio, version 3.1.2000.2
