REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.ReversePipeline.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.Core.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.IndexSelection.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.ScheduleSelection.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.Utility.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\MMRV2.Injection.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\MMSiteModeling.dll";
RESOURCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\HashValue.dll";
REFERENCE @"/shares/SegmentRelevance/SegmentRelevance/MMShared/bin/Relevance.ScopeLib.dll";
RESOURCE @"/shares/SegmentRelevance/SegmentRelevance/MMShared/bin/Relevance.ScopeLib.pdb";
RESOURCE @"/shares/SegmentRelevance/SegmentRelevance/MMShared/bin/Relevance.ScopeLib.xml";

// URL pattern features related
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\NoduleRankFile\DiscoverySelection.Shared.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\NoduleRankFile\DiscoverySelection.Util.dll";
REFERENCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\NoduleRankFile\Selection.Core.dll";
RESOURCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\NoduleRankFile\UrlNormlizerUtil.dll";
RESOURCE @"D:\sd\SearchGold\deploy\builds\data\latest\MMCB\MMRV2\ProdCo3C\Image\Binaries\IndexSelection\NoduleRankFile\tld.txt";


#DECLARE Par_ControlRankArg string = string.Format("{0}:ControlRank", "OrgRank");

Pinterest76K =
    EXTRACT Topic : string
    FROM @"/local/Prod/Image/Prism/Pinterest76K.txt"
    USING DefaultTextExtractor();

RQ =
    VIEW @"/local/Prod/Image/Prism/UniversalRQStore.view";

// Legacy BRQ and MMImgAggClickV5Un score are not aligned

RQ_1 =
    SELECT ContentId,
           Language,
           Query,
           Score,
           AdultScore >= 78 AS IsAdult,
           IsRacy,
           AdultScore
    WHERE Source == "LegacyBRQ"
    HAVING !IsAdult;

RQ_1 =
    SELECT ContentId,
           Query,
           RANK() OVER(PARTITION BY ContentId ORDER BY Score DESC) AS Rank
    HAVING Rank <= 5;

RQ_2 =
    SELECT ContentId,
           Language,
           Query,
           Score,
           IsAdult,
           IsRacy,
           AdultScore
    FROM RQ
    WHERE Source == "MMImgAggClickV5Un" AND IsAdult == false AND Score >= 193;

RQ_2 =
    SELECT ContentId,
           Query;

RQ =
    SELECT ContentId,
           Query
    FROM RQ_1
    UNION ALL
    SELECT ContentId,
           Query
    FROM RQ_2;

RQ =
    SELECT ContentId,
           Query.ToLower() AS Query;

RQ =
    SELECT ContentId,
           Query
    FROM RQ AS a
         LEFT SEMIJOIN
             Pinterest76K AS b
         ON a.Query == b.Topic;

RQ =
    SELECT ContentId,
           String.Join(";", LIST(Query).Distinct().ToArray()) AS Topics
    GROUP BY ContentId;

Index =
    SSTREAM "/local/Prod/Image/Prism/2022-06-02/PrismProdRank_1.ss";
Index =
    SELECT *,
           MMRV2.ReversePipeline.MediaFeatureCooker.GenerateContentId(Signature) AS ContentId;

Index =
    SELECT a.*,
           b.Topics
    FROM Index AS a
         LEFT JOIN
             RQ AS b
         ON a.ContentId == b.ContentId;

OUTPUT
TO SSTREAM "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2.ss"
   HASH CLUSTERED BY Key
       SORTED BY Key, PKey;

IndexEnOnly=
    SELECT *
    FROM Index
    WHERE Language == "en";

OUTPUT
TO SSTREAM "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_EnOnly_Backup.ss"
   HASH CLUSTERED BY Key
       SORTED BY Key, PKey;

IndexEnTopicOnly =
    SELECT *
    FROM IndexEnOnly
    WHERE NOT string.IsNullOrEmpty(Topics);

OUTPUT
TO SSTREAM "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_EnTopicOnly.ss"
   HASH CLUSTERED BY Key
       SORTED BY Key, PKey;

Stats =
    SELECT COUNTIF(!string.IsNullOrEmpty(Topics)) AS NoduleWithTopicCnt
    FROM Index;

OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/NoduleWithTopicCnt.txt"
USING DefaultTextOutputter(outputHeader: true);

Topics =
    SELECT Topics
    FROM Index
    WHERE !string.IsNullOrEmpty(Topics);


Topics =
    SELECT SplitTopics AS Topic
    FROM Topics
         CROSS APPLY Topics.Split(';') AS SplitTopics;

Topics =
    SELECT DISTINCT Topic;

OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/IndexTopics.txt"
USING DefaultTextOutputter();


///////////////////////////////////////////////////////////////
// Calculate adjusted rank cut-off table

Index =
    PROCESS Index
    USING Microsoft.SegmentRelevance.ScopeLib.ColumnProcessor("-rename", @Par_ControlRankArg);
ranks =
    SELECT ControlRank AS Rank,
           COUNT( * ) AS Count
    FROM Index
    GROUP BY Rank;

cutoffs =
    REDUCE ranks ALL
    PRESORT Rank DESC
    USING MMRV2.IndexSelection.RankCutOffTableReducer("start:100000000", "end:100000000000", "interval:100000000");

OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_CutOffTable.tsv";
OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_CutOffTable_2022_06_02.tsv";

IndexEnOnly =
    PROCESS IndexEnOnly
    USING Microsoft.SegmentRelevance.ScopeLib.ColumnProcessor("-rename", @Par_ControlRankArg);
ranks =
    SELECT ControlRank AS Rank,
           COUNT( * ) AS Count
    FROM IndexEnOnly
    GROUP BY Rank;

cutoffs =
    REDUCE ranks ALL
    PRESORT Rank DESC
    USING MMRV2.IndexSelection.RankCutOffTableReducer("start:100000000", "end:100000000000", "interval:100000000");

OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_EnOnly_CutOffTable.tsv";

IndexEnTopicOnly =
    PROCESS IndexEnTopicOnly
    USING Microsoft.SegmentRelevance.ScopeLib.ColumnProcessor("-rename", @Par_ControlRankArg);
ranks =
    SELECT ControlRank AS Rank,
           COUNT( * ) AS Count
    FROM IndexEnTopicOnly
    GROUP BY Rank;

cutoffs =
    REDUCE ranks ALL
    PRESORT Rank DESC
    USING MMRV2.IndexSelection.RankCutOffTableReducer("start:100000000", "end:100000000000", "interval:100000000");

OUTPUT
TO "/local/users/v-yangtian/Image/Prism/2022-06-02/PrismProdRank_2_EnTopicOnly_CutOffTable.tsv";
