data =
    SELECT *
    FROM
    (
        SSTREAM "/local/users/huangxingli/T2S2/snapshotSample_T2S2.ss"
    )
    WHERE !T2S2.Contains("0");

data =
    SELECT Key,
           String.Join(",", LIST(T2S2).ToArray()) AS T2S2_All
    FROM data
    GROUP BY Key;

data =
    SELECT TOP 1 T2S2_All AS T2S2_All
    FROM data;

OUTPUT
TO "/local/users/v-yangtian/T2S2/hist_T2S2_All.tsv"
USING DefaultTextOutputter(outputHeader: true);

hist =
    PROCESS data
    USING GenT2S2HistProcessor();

OUTPUT
TO "/local/users/v-yangtian/T2S2/hist.tsv"
USING DefaultTextOutputter(outputHeader: true);

rankFile =
    SELECT t2s2_Index AS t2s2_Index,
        ROW_NUMBER() OVER(ORDER BY Count ASC) AS Rank
    FROM hist;

OUTPUT rankFile
TO "/local/users/v-yangtian/T2S2/rank.txt"
USING Outputters.Text(outputHeader: true);

#CS

using System.Linq;

public class GenT2S2HistProcessor : Processor
{
    public override Schema Produces(string[] columns, string[] args, Schema input)
    {
        return new Schema("t2s2_Index,Count,Ratio");
    }

    public override IEnumerable<Row> Process(RowSet input, Row output, string[] args)
    {
        foreach (Row row in input.Rows)
        {
            var words = row["T2S2_All"].ToString().Split(',');
            var result = words.ToList().GroupBy(x => x.ToLower()).Select(x => new
            {
                Key = x.Key,
                Count = x.Count(),
                Percentage = x.Count() * 1.0 / words.Length
            }).ToList();

            foreach (var item in result)
            {
                output[0].Set(item.Key);
                output[1].Set(item.Count);
                output[2].Set(item.Percentage);
                yield return output;
            }
        }
    }
}

#ENDCS
